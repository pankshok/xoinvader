[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "xoinvader"
version = "0.2.0"
description = "(not so) small python curses space game"
authors = [
    {name = "Pavel Kulyov", email = "kulyov.pavel@gmail.com"},
]
license = {text = "MIT"}
readme = "README.rst"
keywords = ["curses", "space", "game"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console :: Curses",
    "Environment :: X11 Applications",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Games/Entertainment :: Arcade",
]

requires-python = ">=3.10"
dependencies = [
    "eaf==0.2.2",
    "xo1==0.2.0",
    "toml==0.10.2",
    "windows-curses==2.4.0; platform_system=='Windows'",
]

[project.urls]
repository = "https://github.com/pkulev/xoinvader"
homepage = "https://github.com/pkulev/xoinvader"
documentation = "http://mmap.me/"

[project.optional-dependencies]
dev = [
    "codecov==2.1.13",
    "poethepoet==0.31.1",
    "pytest==8.3.3",
    "pytest-coverage",
    "ruff==0.8.0",
]

docs = [
    "sphinx==8.1.3",
    "sphinx_rtd_theme==3.0.2",
]

[project.scripts]
xoigame = "xoinvader.game:main"

[tool.poe.tasks.format]
help = "Format all the code. You can add '--diff' or '--check' also."
cmd = "ruff format"

[tool.poe.tasks.lint]
help = "Lint all the code."
cmd = "ruff check"

[tool.poe.tasks.typecheck]
help = "Typecheck all the code."
cmd = "mypy xoinvader"

[tool.poe.tasks.test]
help = "Run unit tests."
cmd = "pytest --strict-markers -vvv tests/"

[tool.poe.tasks.ci]
help = "Run full CI sequence."
sequence = [
  "format",
  "lint",
  "typecheck",
  "test",
]
ignore_fail = true  # TODO: drop after all lint errors being fixed

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.ruff]
line-length = 100
select = ["E", "F", "W", "I", "N", "UP", "YTT", "ANN", "S", "B"]

[tool.mypy]
strict = true
implicit_reexport = true
